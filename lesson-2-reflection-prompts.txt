What happens when you initialize a repository? Why do you need to do it?

	It initializes .git directory, it prints:
Initialized empty Git repository in /home/paulino/version-control/<repos-dir>/.git/
It keeps a log of changes.
Commands: git init -- init .git directory/repository
          git status -- to see which files haven't been saved (commited)

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is where files that are really part of the repository are.
To include files from working directory into the staging area: git add <file>,
repository is what we get after commiting.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
